<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Snapchat-style Camera</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      background: black;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      overflow: hidden;
    }

    video {
      width: 100%;
      height: auto;
      border-radius: 12px;
      object-fit: cover;
    }

    #snapshot {
      display: none;
    }

    /* Buttons styling */
    button {
      background: #ff006e;
      color: white;
      border: none;
      padding: 12px 20px;
      border-radius: 50px;
      font-size: 16px;
      cursor: pointer;
    }

    /* Bottom controls */
    #bottomControls {
      position: fixed;
      bottom: 20px;
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 20px;
      z-index: 999;
    }

    #captureBtn {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      font-size: 28px;
      background: #ff006e;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    #saveBtn {
      position: absolute;
      left: 20px;
      bottom: 20px;
    }

    #filters {
      position: absolute;
      right: 20px;
      bottom: 20px;
      display: flex;
      flex-direction: column;
      gap: 8px;
    }

    #flipBtn {
      position: absolute;
      top: 20px;
      right: 20px;
    }

    #flashBtn {
      position: absolute;
      top: 70px;
      right: 20px;
    }

    #flash {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: white;
      opacity: 0;
      pointer-events: none;
      z-index: 9999;
      transition: opacity 0.2s ease;
    }
  </style>
</head>

<body>
  <video id="camera" autoplay playsinline></video>
  <canvas id="snapshot"></canvas>

  <div id="bottomControls">
    <button id="captureBtn">ðŸ“¸</button>
  </div>

  <button id="saveBtn">ðŸ’¾ Save</button>
  
  <div id="filters">
    <button data-filter="none">Normal</button>
    <button data-filter="grayscale(100%)">Grayscale</button>
    <button data-filter="sepia(100%)">Sepia</button>
    <button data-filter="brightness(1.2) contrast(1.1) saturate(1.3)">Bright & Soft</button>
    <button data-filter="contrast(1.2) saturate(1.1) hue-rotate(200deg)">Cool / Blue</button>
    <button data-filter="contrast(1.1) saturate(1.2) hue-rotate(30deg)">Warm / Orange</button>
    <button data-filter="contrast(0.9) brightness(1.1) sepia(0.5)">Vintage / Retro</button>
    <button data-filter="contrast(1) saturate(1) hue-rotate(0deg)">Extra</button>
  </div>

  <button id="flipBtn">ðŸ”„ Flip</button>
  <button id="flashBtn">âš¡ Flash</button>

  <div id="flash"></div>

  <script>
    const video = document.getElementById("camera");
    const canvas = document.getElementById("snapshot");
    const flash = document.getElementById("flash");

    let useFrontCamera = true;
    let currentFilter = 'none';

    const flipBtn = document.getElementById("flipBtn");
    const captureBtn = document.getElementById("captureBtn");
    const saveBtn = document.getElementById("saveBtn");
    const flashBtn = document.getElementById("flashBtn");

    // Filters buttons
    document.querySelectorAll('#filters button').forEach(btn => {
      btn.onclick = () => { currentFilter = btn.getAttribute('data-filter'); };
    });

    async function startCamera() {
      if (video.srcObject) {
        video.srcObject.getTracks().forEach(track => track.stop());
      }

      const constraints = {
        video: { facingMode: useFrontCamera ? "user" : "environment" }
      };

      try {
        const stream = await navigator.mediaDevices.getUserMedia(constraints);
        video.srcObject = stream;
      } catch (err) {
        alert("Camera access failed: " + err);
      }
    }

    flipBtn.onclick = () => {
      useFrontCamera = !useFrontCamera;
      startCamera();
    };

    flashBtn.onclick = () => flashEffect();

    function flashEffect() {
      flash.style.opacity = 0.8;
      setTimeout(() => { flash.style.opacity = 0; }, 100);
    }

    function takePhoto() {
      flashEffect();
      const context = canvas.getContext("2d");
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;
      context.filter = currentFilter;
      context.drawImage(video, 0, 0);

      // Automatic download
      const link = document.createElement("a");
      link.href = canvas.toDataURL("image/png");
      link.download = `photo_${Date.now()}.png`;
      link.click();
    }

    captureBtn.onclick = takePhoto;

    saveBtn.onclick = () => {
      const link = document.createElement("a");
      link.href = canvas.toDataURL("image/png");
      link.download = `photo_${Date.now()}.png`;
      link.click();
    };

    // Start camera on load
    startCamera();
  </script>
</body>
</html>
